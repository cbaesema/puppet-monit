check process nova-compute matching "nova-compute"
    start program = "/usr/sbin/service nova-compute start" with timeout 90 seconds
    stop program  = "/usr/sbin/service nova-compute stop"
    if 3 restarts within 3 cycles then alert
       
check process nova-scheduler matching "nova-scheduler"
    start program = "/usr/sbin/service nova-scheduler start" with timeout 90 seconds
    stop program  = "/usr/sbin/service nova-scheduler stop"
    if 3 restarts within 3 cycles then alert

check process nova-volume matching "nova-volume"
    start program = "/usr/sbin/service nova-volume start" with timeout 90 seconds
    stop program  = "/usr/sbin/service nova-volume stop"
    if 3 restarts within 3 cycles then alert

check process nova-api matching "nova-api"
    start program = "/usr/sbin/service nova-api start" with timeout 90 seconds
    stop program  = "/usr/sbin/service nova-api stop"
    if failed port 8773 then restart
    if failed port 8774 then restart
    if failed port 8775 then restart
    if failed port 8776 then restart
    if 5 restarts within 5 cycles then alert
       

check file nova-api-log with path /var/log/nova/nova-api.log
    if match '(ERROR|TRACE|CRITICAL)' then alert

check file nova-cert-log with path /var/log/nova/nova-cert.log
    if match '(ERROR|TRACE|CRITICAL)' then alert

check file nova-compute-log with path /var/log/nova/nova-compute.log
    if match '(ERROR|TRACE|CRITICAL)' then alert

check file nova-network-log with path /var/log/nova/nova-network.log
    if match '(ERROR|TRACE|CRITICAL)' then alert

check file nova-scheduler-log with path /var/log/nova/nova-scheduler.log
    if match '(ERROR|TRACE|CRITICAL)' then alert

check file nova-volume-log with path /var/log/nova/nova-volume.log
    if match '(ERROR|TRACE|CRITICAL)' then alert
